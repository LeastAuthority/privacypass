# install:
#   # Install OpenSSH through chocolatey
#   - "choco install openssh -confirm"
#   - "refreshenv"

#   # Prepend newly installed Python to the PATH of this build (this cannot be
#   # done from inside the powershell script as it would require to restart
#   # the parent CMD process).
#   - "SET PATH=%PYTHON_HOME%;%PYTHON_HOME%\\Scripts;%PATH%"
#   - "SET LIB=%PYTHON_HOME%\\lib;%LIB%"

#   # The following line is inspired by http://nedbatchelder.com/blog/201509/appveyor.html
#   # Tox has an internal mapping of where to find python.exe.  Unfortunately,
#   # this internal mapping is not the same as the Appveyor build host, which has
#   # to install separate python.exe in different directories for 32-bit and 64-bit.
#   # We write out a .bat file which invokes the correct python.exe.  tox will invoke
#   # this .at file.  This issue becomes important because linking to python.lib
#   # will fail without this.
#   - "python -c \"import os; open('python{0}.bat'.format(os.environ['PYTHON_VERSION']), 'w').write('@{0}\\\\python \\x25*\\n'.format(os.environ['PYTHON_HOME']))\""
#   - "type python*.bat"

#   # Get some information about the build environment.
#   # Uncomment them. Left here so that you don't have to search the net for
#   # how to run such command on Windows :)
#   # - ps: "ls \"C:/\""
#   # - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""
#   # - ps: echo $env:PYTHON $env:TOXENV
#   # Check that we have the expected version and architecture for Python
#   - "python -c \"import sys; print(sys.prefix)\""
#   - "python -c \"import sys; print(sys.exec_prefix)\""
#   - "python -c \"import sys; print(sys.executable)\""
#   - "python --version"
#   - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

#   # The build system itself is handled by tox.
#   - "python -m pip install -U pip"
#   - "python -m pip install tox"


# test_script:
#   - "%CMD_IN_ENV% python -m tox -e %TOXENV%"


# artifacts:
#   - path: "wheelhouse\\*.whl"
#     name: Wheels

# Don't build branch if there is an open PR, to prevent double builds.
# For now, Appveyor will only build PR commits and not commits to master or
# commits on random branches without an associated PR.
skip_branch_with_pr: true

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\bin\\admin\\run_with_env.cmd"

  # Only use pre-installed Python versions, which Appveyor may upgrade to
  # a later point release.
  # See: http://www.appveyor.com/docs/installed-software#python
  matrix:
    - PYTHON_HOME: C:\\PYTHON27-x64
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "64"
    - PYTHON_HOME: C:\\PYTHON37-x64
      PYTHON_VERSION: "3.7"
      PYTHON_ARCH: "64"

version: "0.999.post{build}"

build_script:
  - "choco install rustup.install --version 1.19.0"
  - "refreshenv"
  - "git submodule init"
  - "git submodule update"
  - "cd challenge-bypass-ristretto-ffi"
  - "cargo build"
  - "cd .."
  - "python setup.py install"
  # # Set up the environment so we can build and test.
  # - "C:\\projects\\privacypass\\.ci\\appveyor\\init.bat"
  # # Use distutils to build the challenge-bypass-ristretto{-ffi} and our extension
  # # module.
  # - "C:\\projects\\privacypass\\.ci\\appveyor\\build.bat"

test_script:
  # This passes for a test suite.
  - "python C:\\projects\\privacypass\\spike.py"
