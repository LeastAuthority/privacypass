# DO NOT EDIT!  This file was automatically generated.
# Generated at: 2020-03-13T15:22:33.872872
# Generated by: './.github/workflows/generate-workflow' './.github/workflows/packages.yaml'

{"on": "push", "jobs": {"check-workflow": {"container": {"image": "python:3.7-slim"}, "steps": [{"uses": "actions/checkout@v2", "name": "Checkout Source"}, {"run": "pip install pyyaml\n./.github/workflows/generate-workflow ./.github/workflows/packages.yaml\nif git status --short | grep 'M .github/workflows/packages.yaml$'; then\n  echo \"Generated changes to the workflow from the template!\"\n  git diff\n  exit 1\nfi\n", "name": "Check"}], "name": "Check Github Actions Workflow Configuration", "runs-on": "ubuntu-latest"}, "windows-packages": {"needs": ["check-workflow"], "strategy": {"matrix": {"python-version": ["pypy3"], "os": ["windows-latest"]}}, "steps": [{"run": "git config --global core.autocrlf false"}, {"uses": "actions/checkout@9a3a9ade8222dcdf9d3c77710b10df47ee7c7c89", "with": {"fetch-depth": 0, "submodules": "recursive"}}, {"run": "# We need tags to compute a version number.\ngit fetch --tags\n", "name": "Finish Checkout"}, {"run": "pip install wheel twine\n", "name": "Get Packaging Dependencies"}, {"run": "python setup.py bdist_wheel\n", "name": "Build Packages"}, {"run": "twine upload --repository pypi dist/*\n", "name": "Upload Packages", "env": {"TWINE_USERNAME": "__token__", "TWINE_PASSWORD": "${{ secrets.exarkun_pypi_api_key }}"}}], "name": "Build Windows Packages", "runs-on": "${{ matrix.os }}"}, "manylinux2010-packages": {"needs": ["check-workflow"], "strategy": {"matrix": {"python-version": ["pypy3"], "os": ["ubuntu-18.04"]}}, "steps": [{"uses": "actions/checkout@9a3a9ade8222dcdf9d3c77710b10df47ee7c7c89", "with": {"fetch-depth": 0, "submodules": "recursive"}}, {"run": "# We need tags to compute a version number.\ngit fetch --tags\n", "name": "Finish Checkout"}, {"run": "mv setup.py setup.py.orig\necho 'exec(open(\"/github/workspace/.github/workflows/manylinux2010-install-rust.py\").read())' > setup.py\ncat setup.py.orig >> setup.py\n", "name": "Inject Rust Installer"}, {"uses": "RalfG/python-wheels-manylinux-build@v0.2.2-manylinux2010_x86_64", "with": {"python-versions": "cp37-cp37m"}, "name": "Build a binary wheel and a source tarball"}, {"run": "mkdir -p dist\ncp wheelhouse/*manylinux2010*.whl dist/\n", "name": "Put packages where they can be found"}, {"run": "twine upload --repository pypi dist/*\n", "name": "Upload Packages", "env": {"TWINE_USERNAME": "__token__", "TWINE_PASSWORD": "${{ secrets.exarkun_pypi_api_key }}"}}], "name": "Build manylinux2010 Packages", "runs-on": "${{ matrix.os }}"}, "macos-packages": {"needs": ["check-workflow"], "strategy": {"matrix": {"python-version": ["pypy3"], "os": ["macos-latest"]}}, "steps": [{"uses": "actions/checkout@9a3a9ade8222dcdf9d3c77710b10df47ee7c7c89", "with": {"fetch-depth": 0, "submodules": "recursive"}}, {"run": "# We need tags to compute a version number.\ngit fetch --tags\n", "name": "Finish Checkout"}, {"run": "pip install wheel twine\n", "name": "Get Packaging Dependencies"}, {"run": "python setup.py bdist_wheel\n", "name": "Build Packages"}, {"run": "twine upload --repository pypi dist/*\n", "name": "Upload Packages", "env": {"TWINE_USERNAME": "__token__", "TWINE_PASSWORD": "${{ secrets.exarkun_pypi_api_key }}"}}], "name": "Build macOS Packages", "runs-on": "${{ matrix.os }}"}}, "name": "Build Python Packages"}